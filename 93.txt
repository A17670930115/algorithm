class Solution {
     private List<String> res = new ArrayList<>();
     public List<String> restoreIpAddresses(String s) {
	        List<Integer> list = new ArrayList<>();
	        dfs(0,s,list);
	        return res;
	    }
		private void dfs(int xiabiao,String s, List<Integer> list) {
			if(list.size()<4&&xiabiao==s.length())return;
			if(list.size()==4&&xiabiao==s.length()) {
				String wang = "";
				wang+=list.get(0);
				for(int i=1;i<4;i++) {
					wang+="."+list.get(i);
				}
				res.add(wang);
				return;
			}
			 if(list.size() > 4 && xiabiao <= s.length()) return;
			for(int j = 1;j <= (s.charAt(xiabiao)=='0'?1:3);j++) {
	            if(xiabiao + j <= s.length()) {
	                int num = Integer.parseInt(s.substring(xiabiao, xiabiao + j));
	                if(num <= 255) {
	                    list.add(num);
	                    dfs(xiabiao + j,s,list);
	                    list.remove(list.size() - 1);
	                }
	            }
	        }
        }
    }